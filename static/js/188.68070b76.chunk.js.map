{"version":3,"file":"static/js/188.68070b76.chunk.js","mappings":"kUASaA,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAKIC,EAAAA,EAAAA,IAAQ,IAJVC,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OACbE,EAJF,EAIEA,WAUF,OACE,+BACE,SAAC,KAAD,CAAMC,WAAS,EAACC,WAAW,SAASC,QAAQ,SAASC,UAAU,SAA/D,UACE,iBAAMC,SAAUR,GAXL,SAAAS,GACfC,QAAQC,IAAIF,GACZN,EAAW,QACXA,EAAW,SACXA,EAAW,YACXP,GAASgB,EAAAA,EAAAA,IAAaH,OAMlB,UACE,UAAC,IAAD,CACEI,GAAI,CACFC,gBAAiB,UACjBC,QAAS,OACTC,OAAQ,mBACRC,aAAc,MALlB,WAQE,SAAC,IAAD,CACEJ,GAAI,CAAEK,OAAQ,YAAaC,WAAY,MAAOC,SAAU,QAD1D,2BAKA,SAAC,KAAD,CAAMC,MAAI,EAAV,UACE,SAAC,KAAD,QACEC,UAAQ,EACRC,GAAG,oBACHC,MAAM,OACNC,gBAAiB,CACfC,MAAO,CAAEC,MAAO,UAAWR,WAAY,MAEzCS,WAAY,CACVF,MAAO,CACLG,MAAO,QACPf,gBAAiB,YAGrBD,GAAI,CACFiB,aAAc,SAEZ/B,EAAS,OAAQ,CACnBuB,UAAU,EACVS,QAAS,CACPC,MACE,yHACFC,QAAS,oDAKjB,SAAC,IAAD,CACEhC,OAAQA,EACRiC,KAAK,OACLC,OAAQ,gBAAGF,EAAH,EAAGA,QAAH,OACN,cACEP,MAAO,CACLU,WAAY,GACZT,MAAO,MACPP,SAAU,GACVS,MAAO,KALX,SAQGI,QAIP,SAAC,KAAD,CAAMZ,MAAI,EAAV,UACE,SAAC,KAAD,QACEC,UAAQ,EACRC,GAAG,oBACHC,MAAM,QACNC,gBAAiB,CACfC,MAAO,CAAEC,MAAO,UAAWR,WAAY,MAEzCS,WAAY,CACVF,MAAO,CACLG,MAAO,QACPf,gBAAiB,YAGrBD,GAAI,CACFiB,aAAc,SAEZ/B,EAAS,QAAS,CACpBgC,QAAS,CACPC,MAAO,2CACPC,QAAS,gCAKjB,SAAC,IAAD,CACEhC,OAAQA,EACRiC,KAAK,QACLC,OAAQ,gBAAGF,EAAH,EAAGA,QAAH,OACN,cACEP,MAAO,CACLU,WAAY,GACZT,MAAO,MACPP,SAAU,GACVS,MAAO,KALX,SAQGI,QAIP,SAAC,KAAD,QACEI,YAAY,WACZf,UAAQ,EACRC,GAAG,oBACHC,MAAM,WACNc,KAAK,WACLC,aAAa,MACbd,gBAAiB,CACfC,MAAO,CAAEC,MAAO,UAAWR,WAAY,MAEzCS,WAAY,CACVF,MAAO,CACLG,MAAO,QACPf,gBAAiB,YAGrBD,GAAI,CACFiB,aAAc,SAEZ/B,EAAS,WAAY,CACvByC,UAAW,CACTR,MAAO,EACPC,QAAS,mCAIf,SAAC,IAAD,CACEhC,OAAQA,EACRiC,KAAK,WACLC,OAAQ,gBAAGF,EAAH,EAAGA,QAAH,OACN,cACEP,MAAO,CACLU,WAAY,GACZT,MAAO,MACPP,SAAU,GACVS,MAAO,KALX,SAQGI,QAIP,SAAC,EAAAQ,IAAD,CACEH,KAAK,SACLb,gBAAiB,CACfC,MAAO,CAAEC,MAAO,UAAWR,WAAY,MAEzCN,GAAI,CACFiB,aAAc,qB,sFC3KjBW,GAAMC,E,OAAAA,IAAOC,EAAAA,EAAPD,CAAH,kGACM,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,WAG1B,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,OAAOE,e","sources":["pages/RegisterPage/RegisterPage.jsx","pages/RegisterPage/RegisterPage.styled.jsx"],"sourcesContent":["import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { registration } from 'redux/auth/authOperations';\nimport { FormControl, FormLabel, TextField } from '@mui/material';\nimport Grid from '@mui/material/Grid';\nimport { Btn } from './RegisterPage.styled';\nimport { ErrorMessage } from '@hookform/error-message';\n\nexport const RegisterPage = () => {\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    resetField,\n  } = useForm({});\n  const onSubmit = data => {\n    console.log(data);\n    resetField('name');\n    resetField('email');\n    resetField('password');\n    dispatch(registration(data));\n  };\n\n  return (\n    <>\n      <Grid container alignItems=\"center\" justify=\"center\" direction=\"column\">\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <FormControl\n            sx={{\n              backgroundColor: '#ffffff',\n              padding: '25px',\n              border: '1px dashed black',\n              borderRadius: '8%',\n            }}\n          >\n            <FormLabel\n              sx={{ margin: '15px auto', fontWeight: '700', fontSize: '32px' }}\n            >\n              Registration\n            </FormLabel>\n            <Grid item>\n              <TextField\n                required\n                id=\"outlined-required\"\n                label=\"Name\"\n                InputLabelProps={{\n                  style: { color: '#6C5F5B', fontWeight: 700 },\n                }}\n                inputProps={{\n                  style: {\n                    width: '300px',\n                    backgroundColor: '#DAC3B3',\n                  },\n                }}\n                sx={{\n                  marginBottom: '20px',\n                }}\n                {...register('name', {\n                  required: true,\n                  pattern: {\n                    value:\n                      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n                    message: 'The name must contain the characters only',\n                  },\n                })}\n              />\n            </Grid>\n            <ErrorMessage\n              errors={errors}\n              name=\"name\"\n              render={({ message }) => (\n                <p\n                  style={{\n                    marginTop: -15,\n                    color: 'red',\n                    fontSize: 12,\n                    width: 300,\n                  }}\n                >\n                  {message}\n                </p>\n              )}\n            />\n            <Grid item>\n              <TextField\n                required\n                id=\"outlined-required\"\n                label=\"Email\"\n                InputLabelProps={{\n                  style: { color: '#DAC3B3', fontWeight: 700 },\n                }}\n                inputProps={{\n                  style: {\n                    width: '300px',\n                    backgroundColor: '#6C5F5B',\n                  },\n                }}\n                sx={{\n                  marginBottom: '20px',\n                }}\n                {...register('email', {\n                  pattern: {\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                    message: 'Invalid email address',\n                  },\n                })}\n              />\n            </Grid>\n            <ErrorMessage\n              errors={errors}\n              name=\"email\"\n              render={({ message }) => (\n                <p\n                  style={{\n                    marginTop: -15,\n                    color: 'red',\n                    fontSize: 12,\n                    width: 200,\n                  }}\n                >\n                  {message}\n                </p>\n              )}\n            />\n            <TextField\n              placeholder=\"Password\"\n              required\n              id=\"outlined-required\"\n              label=\"Password\"\n              type=\"password\"\n              autoComplete=\"off\"\n              InputLabelProps={{\n                style: { color: '#6C5F5B', fontWeight: 700 },\n              }}\n              inputProps={{\n                style: {\n                  width: '300px',\n                  backgroundColor: '#DAC3B3',\n                },\n              }}\n              sx={{\n                marginBottom: '20px',\n              }}\n              {...register('password', {\n                minLength: {\n                  value: 8,\n                  message: 'Min length is 8 characters',\n                },\n              })}\n            />\n            <ErrorMessage\n              errors={errors}\n              name=\"password\"\n              render={({ message }) => (\n                <p\n                  style={{\n                    marginTop: -15,\n                    color: 'red',\n                    fontSize: 12,\n                    width: 200,\n                  }}\n                >\n                  {message}\n                </p>\n              )}\n            />\n            <Btn\n              type=\"submit\"\n              InputLabelProps={{\n                style: { color: '#6C5F5B', fontWeight: 700 },\n              }}\n              sx={{\n                marginBottom: '20px',\n              }}\n            />\n          </FormControl>\n        </form>\n      </Grid>\n    </>\n  );\n};\n","import { TextField } from '@mui/material';\nimport styled from 'styled-components';\n\nexport const Btn = styled(TextField)`\n  background-color: ${props => props.theme.colors.metalic};\n\n  &:hover {\n    background-color: ${props => props.theme.colors.newspapper};\n  }\n`;\n"],"names":["RegisterPage","dispatch","useDispatch","useForm","register","handleSubmit","errors","formState","resetField","container","alignItems","justify","direction","onSubmit","data","console","log","registration","sx","backgroundColor","padding","border","borderRadius","margin","fontWeight","fontSize","item","required","id","label","InputLabelProps","style","color","inputProps","width","marginBottom","pattern","value","message","name","render","marginTop","placeholder","type","autoComplete","minLength","Btn","styled","TextField","props","theme","colors","metalic","newspapper"],"sourceRoot":""}