{"version":3,"file":"static/js/664.65acee9a.chunk.js","mappings":"0VAYMA,EAASC,EAAAA,GACL,CACNC,MAAOD,EAAAA,KAEJC,QACAC,UAAU,gCACVC,WACHC,SAAUJ,EAAAA,KAEPG,SAAS,yBACTE,IAAI,EAAG,sDACPC,QAAQ,WAAY,8CAExBH,WAEUI,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAKIC,EAAAA,EAAAA,IAAQ,CACVC,UAAUC,EAAAA,EAAAA,GAAYb,KALtBc,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OACbE,EAJF,EAIEA,WAUF,OACE,+BACE,SAAC,KAAD,CAAMC,WAAS,EAACC,WAAW,SAASC,QAAQ,SAASC,UAAU,SAA/D,UACE,iBAAMC,SAAUR,GATL,SAAC,GAAyB,IAAvBb,EAAsB,EAAtBA,MAAOG,EAAe,EAAfA,SACzBa,EAAW,SACXA,EAAW,YACXT,GAASe,EAAAA,EAAAA,IAAM,CAAEtB,MAAAA,EAAOG,SAAAA,QAMpB,UACE,UAAC,IAAD,CACEoB,GAAI,CACFC,gBAAiB,UACjBC,QAAS,OACTC,OAAQ,mBACRC,aAAc,MALlB,WAQE,SAAC,IAAD,CACEJ,GAAI,CAAEK,OAAQ,YAAaC,WAAY,MAAOC,SAAU,QAD1D,qBAKA,SAAC,KAAD,CAAMC,MAAI,EAAV,UACE,SAAC,KAAD,QACE7B,UAAQ,EACR8B,GAAG,oBACHC,MAAM,QACNC,gBAAiB,CACfC,MAAO,CAAEC,MAAO,UAAWP,WAAY,MAEzCQ,WAAY,CACVF,MAAO,CACLG,MAAO,QACPd,gBAAiB,YAGrBD,GAAI,CACFgB,aAAc,SAEZ3B,EAAS,QAAS,CACpB4B,QAAS,CACPC,MAAO,2CACPC,QAAS,gCAKjB,SAAC,IAAD,CACE5B,OAAQA,EACR6B,KAAK,QACLC,OAAQ,gBAAGF,EAAH,EAAGA,QAAH,OACN,cACEP,MAAO,CACLU,WAAY,GACZT,MAAO,MACPN,SAAU,GACVQ,MAAO,KALX,SAQGI,QAIP,SAAC,KAAD,QACEI,YAAY,WACZ5C,UAAQ,EACR8B,GAAG,oBACHC,MAAM,WACNc,KAAK,WACLC,aAAa,MACbd,gBAAiB,CACfC,MAAO,CAAEC,MAAO,UAAWP,WAAY,MAEzCQ,WAAY,CACVF,MAAO,CACLG,MAAO,QACPd,gBAAiB,YAGrBD,GAAI,CACFgB,aAAc,SAEZ3B,EAAS,WAAY,CACvBqC,UAAW,CACTR,MAAO,EACPC,QAAS,mCAIf,SAAC,IAAD,CACE5B,OAAQA,EACR6B,KAAK,WACLC,OAAQ,gBAAGF,EAAH,EAAGA,QAAH,OACN,cACEP,MAAO,CACLU,WAAY,GACZT,MAAO,MACPN,SAAU,GACVQ,MAAO,KALX,SAQGI,QAIP,SAAC,EAAAQ,IAAD,CACEH,KAAK,SACLb,gBAAiB,CACfC,MAAO,CAAEC,MAAO,UAAWP,WAAY,MAEzCN,GAAI,CACFgB,aAAc,WAGlB,SAAC,KAAD,e,uFCrJCW,GAAMC,E,OAAAA,IAAOC,EAAAA,EAAPD,CAAH,kGACM,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,cAG1B,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,OAAOE","sources":["pages/LoginPage/LoginPage.jsx","pages/LoginPage/LoginPage.styled.js"],"sourcesContent":["import React from 'react';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/authOperations';\nimport { FormControl, FormLabel, TextField } from '@mui/material';\nimport Grid from '@mui/material/Grid';\nimport { Btn } from './LoginPage.styled';\nimport { ErrorMessage } from '@hookform/error-message';\nimport { Toaster } from 'react-hot-toast';\n\nconst schema = yup\n  .object({\n    email: yup\n      .string()\n      .email()\n      .typeError('Custom not a number message!')\n      .required(),\n    password: yup\n      .string()\n      .required('No password provided.')\n      .min(8, 'Password is too short - should be 8 chars minimum.')\n      .matches(/[a-zA-Z]/, 'Password can only contain Latin letters.'),\n  })\n  .required();\n\nexport const LoginPage = () => {\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    resetField,\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n  const onSubmit = ({ email, password }) => {\n    resetField('email');\n    resetField('password');\n    dispatch(logIn({ email, password }));\n  };\n\n  return (\n    <>\n      <Grid container alignItems=\"center\" justify=\"center\" direction=\"column\">\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <FormControl\n            sx={{\n              backgroundColor: '#ffffff',\n              padding: '25px',\n              border: '1px dashed black',\n              borderRadius: '8%',\n            }}\n          >\n            <FormLabel\n              sx={{ margin: '15px auto', fontWeight: '700', fontSize: '32px' }}\n            >\n              Log In\n            </FormLabel>\n            <Grid item>\n              <TextField\n                required\n                id=\"outlined-required\"\n                label=\"Email\"\n                InputLabelProps={{\n                  style: { color: '#6C5F5B', fontWeight: 700 },\n                }}\n                inputProps={{\n                  style: {\n                    width: '300px',\n                    backgroundColor: '#DAC3B3',\n                  },\n                }}\n                sx={{\n                  marginBottom: '20px',\n                }}\n                {...register('email', {\n                  pattern: {\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                    message: 'Invalid email address',\n                  },\n                })}\n              />\n            </Grid>\n            <ErrorMessage\n              errors={errors}\n              name=\"email\"\n              render={({ message }) => (\n                <p\n                  style={{\n                    marginTop: -15,\n                    color: 'red',\n                    fontSize: 12,\n                    width: 200,\n                  }}\n                >\n                  {message}\n                </p>\n              )}\n            />\n            <TextField\n              placeholder=\"Password\"\n              required\n              id=\"outlined-required\"\n              label=\"Password\"\n              type=\"password\"\n              autoComplete=\"off\"\n              InputLabelProps={{\n                style: { color: '#DAC3B3', fontWeight: 700 },\n              }}\n              inputProps={{\n                style: {\n                  width: '300px',\n                  backgroundColor: '#6C5F5B',\n                },\n              }}\n              sx={{\n                marginBottom: '20px',\n              }}\n              {...register('password', {\n                minLength: {\n                  value: 8,\n                  message: 'Min length is 8 characters',\n                },\n              })}\n            />\n            <ErrorMessage\n              errors={errors}\n              name=\"password\"\n              render={({ message }) => (\n                <p\n                  style={{\n                    marginTop: -15,\n                    color: 'red',\n                    fontSize: 12,\n                    width: 200,\n                  }}\n                >\n                  {message}\n                </p>\n              )}\n            />\n            <Btn\n              type=\"submit\"\n              InputLabelProps={{\n                style: { color: '#6C5F5B', fontWeight: 700 },\n              }}\n              sx={{\n                marginBottom: '20px',\n              }}\n            />\n            <Toaster />\n          </FormControl>\n        </form>\n      </Grid>\n    </>\n  );\n};\n","import { TextField } from '@mui/material';\nimport styled from 'styled-components';\n\nexport const Btn = styled(TextField)`\n  background-color: ${props => props.theme.colors.newspapper};\n\n  &:hover {\n    background-color: ${props => props.theme.colors.tin};\n  }\n`;\n"],"names":["schema","yup","email","typeError","required","password","min","matches","LoginPage","dispatch","useDispatch","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","resetField","container","alignItems","justify","direction","onSubmit","logIn","sx","backgroundColor","padding","border","borderRadius","margin","fontWeight","fontSize","item","id","label","InputLabelProps","style","color","inputProps","width","marginBottom","pattern","value","message","name","render","marginTop","placeholder","type","autoComplete","minLength","Btn","styled","TextField","props","theme","colors","newspapper","tin"],"sourceRoot":""}