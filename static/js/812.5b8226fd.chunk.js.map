{"version":3,"file":"static/js/812.5b8226fd.chunk.js","mappings":"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","sources":["components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Contacts/Contacts.styled.jsx","components/Contacts/Contacts.js","pages/ContactsPage/ContactsPage.jsx","pages/HomePage/HomePage.jsx","pages/LoginPage/LoginPage.jsx","pages/LoginPage/LoginPage.styled.js","pages/RegisterPage/RegisterPage.jsx","pages/RegisterPage/RegisterPage.styled.jsx","../node_modules/@mui/icons-material/ContactPhone.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactsList = styled.ul`\n  margin: 0;\n  padding: ${props => props.theme.spacing(5)};\n`;\nexport const Button = styled.button`\n  display: inline-block;\n  margin-left: ${props => props.theme.spacing(6)};\n  width: 80px;\n  height: 24px;\n  background: repeating-linear-gradient(45deg, black, transparent 100px);\n  color: ${props => props.theme.colors.craftPapper};\n  cursor: pointer;\n  transition: ${props => props.theme.animation()};\n\n  :hover {\n    color: ${props => props.theme.colors.newspapper};\n    background-color: ${props => props.theme.colors.metalic};\n    box-shadow: 1px 1px 25px 10px rgba(34, 25, 9, 0.4);\n  }\n  :before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(\n      120deg,\n      transparent,\n      rgba(224, 218, 206, 0.4),\n      transparent\n    );\n    transition: all 650ms;\n  }\n  :disabled {\n    border: 1px solid #999999;\n    background-color: #cccccc;\n    color: #666666;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { ContactsList, Button } from './ContactList.styled';\nimport { useDeletePostMutation } from 'redux/contactsApi';\n\nexport const ContactList = ({ contacts }) => {\n  const [deletePost, { isLoading: isDeleting }] = useDeletePostMutation();\n  return (\n    <ContactsList>\n      {contacts.map(({ name, id, number }) => (\n        <li key={id}>\n          {name}: {number}\n          <Button\n            type=\"button\"\n            onClick={() => deletePost(id)}\n            disabled={isDeleting}\n          >\n            Delete\n          </Button>\n        </li>\n      ))}\n    </ContactsList>\n  );\n};\n\nPropTypes.ContactList = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n      number: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n  onDeleteClick: PropTypes.func.isRequired,\n};\n","import styled from \"styled-components\";\n\nexport const Button = styled.button`\n  background-color: transparent;\n  border: none;\n  position: absolute;\n  top: 69%;\n  right: 57%;\n`;\nexport const Input = styled.input`\n  display: block;\n  width: 250px;\n  height: 22px;\n`;\nexport const Wrapper = styled.div`\n  position: relative;\n`;\n","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { FaBackspace } from 'react-icons/fa';\nimport {\n  filterContact,\n  deleteSearchingContact,\n  getFilter,\n} from 'redux/filterSlice';\nimport { useGetContactsQuery } from 'redux/contactsApi';\n\nimport { Input, Wrapper, Button } from './Filter.styled';\n\nexport const Filter = () => {\n  const { data: contacts } = useGetContactsQuery();\n\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  const filterInputChange = evt => {\n    dispatch(filterContact(evt.currentTarget.value));\n  };\n  const filterHandleDelete = () => {\n    dispatch(deleteSearchingContact(''));\n  };\n  return (\n    <Wrapper>\n      {contacts && contacts.length > 0 && (\n        <label>\n          Find contacts by name\n          <Input\n            type=\"text\"\n            name=\"filter\"\n            value={filter}\n            onChange={filterInputChange}\n          />\n          {filter && (\n            <Button onClick={filterHandleDelete}>\n              <FaBackspace />\n            </Button>\n          )}\n        </label>\n      )}\n    </Wrapper>\n  );\n};\n\nPropTypes.Filter = {\n  filter: PropTypes.string.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n      number: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n  onChange: PropTypes.func.isRequired,\n  onClick: PropTypes.func,\n};\n","import styled from \"styled-components\";\n\nexport const Form = styled.form`\n  border: ${(props) => `2px solid ${props.theme.colors.tin}`};\n  max-width: 400px;\n  padding: ${(props) => props.theme.spacing(2)};\n  box-shadow: 1px 1px 25px rgba(0, 0, 0, 0.35);\n  border-radius: 10px;\n`;\nexport const Label = styled.label`\n  display: block;\n`;\nexport const Input = styled.input`\n  margin-left: ${(props) => props.theme.spacing(3)};\n`;\nexport const Button = styled.button`\n  width: 150px;\n  height: 32px;\n  margin-bottom: 12px;\n  position: relative;\n  overflow: hidden;\n  color: ${(props) => props.theme.colors.newspapper};\n  background-color: ${(props) => props.theme.colors.tin};\n  transition: background-color ${(props) => `${props.theme.animation()}`};\n  cursor: pointer;\n\n  :hover {\n    color: ${(props) => props.theme.colors.black};\n    background-color: ${(props) => props.theme.colors.metalic};\n    box-shadow: 1px 1px 25px 10px rgba(34, 25, 9, 0.4);\n  }\n  :before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(\n      120deg,\n      transparent,\n      rgba(224, 218, 206, 0.4),\n      transparent\n    );\n    transition: all 650ms;\n  }\n  :hover:before {\n    left: 100%;\n  }\n`;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Input, Button, Label } from './ContactForm.styled';\n\nexport const ContactForm = ({ onSubmit }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const handleInputChange = evt => {\n    const { name, value } = evt.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    onSubmit(name, number);\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleInputChange}\n        />\n      </Label>\n      <Label>\n        Phone Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleInputChange}\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n\nPropTypes.ContactForm = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  background-color: ${props => props.theme.colors.newspapper};\n  margin: 0 auto;\n  max-width: 600px;\n  padding: ${props => props.theme.spacing(10)};\n  border: 1px dashed black;\n  border-radius: 8%;\n  min-height: 650px;\n`;\nexport const Title = styled.h1`\n  margin: 0;\n  margin-left: ${props => props.theme.spacing()};\n`;\nexport const Contact = styled.h2`\n  margin: 0;\n  font-weight: 700;\n`;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { getFilter } from 'redux/filterSlice';\nimport { useGetContactsQuery, useAddPostMutation } from 'redux/contactsApi';\nimport { nanoid } from 'nanoid';\nimport { Link } from 'react-router-dom';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { ContactList } from '../ContactList';\nimport { Filter } from '../Filter';\nimport { ContactForm } from '../ContactForm';\nimport { InfinitySpin } from 'react-loader-spinner';\nimport { Container, Title, Contact } from './Contacts.styled';\n\nexport const Contacts = () => {\n  const { data: contacts, error, isLoading } = useGetContactsQuery();\n  const [addContact] = useAddPostMutation();\n\n  const filter = useSelector(getFilter);\n\n  const findContact = () => {\n    const normilizedFilter = filter.toLowerCase();\n\n    return contacts?.filter(contact =>\n      contact.name.toLowerCase().includes(normilizedFilter)\n    );\n  };\n\n  const addingContact = (submitedName, submitedNumber) => {\n    const notify = () =>\n      toast.error(`${searchedName.name} is already in contacts`);\n    const successAdded = () =>\n      toast.success('successfully added!', {\n        style: {\n          border: '1px solid #713200',\n          padding: '16px',\n          color: '#713200',\n        },\n        iconTheme: {\n          primary: '#713200',\n          secondary: '#FFFAEE',\n        },\n      });\n    const id = nanoid();\n    const newContact = { name: submitedName, id, number: submitedNumber };\n\n    const searchedName = contacts?.find(\n      ({ name }) => name.toLowerCase() === submitedName.toLowerCase()\n    );\n\n    searchedName ? notify() : addContact(newContact);\n\n    !searchedName && successAdded();\n  };\n\n  const filteredContacts = findContact();\n  return (\n    <Container>\n      {/* <Link to=\"/register\">Register</Link> | <Link to=\"/login\">Login</Link>\n      <Link to=\"/contacts\">Contacts</Link> */}\n      <Title>Phonebook</Title>\n      <ContactForm onSubmit={addingContact} />\n      <Toaster />\n      <Contact>Contacts</Contact>\n      <Filter />\n      {error ? (\n        <p>No contacts yet</p>\n      ) : isLoading ? (\n        <InfinitySpin color=\"black\" />\n      ) : (\n        <ContactList contacts={filteredContacts} />\n      )}\n    </Container>\n  );\n};\n","import { Contacts } from 'components/Contacts';\n\nexport const ContactsPage = () => {\n  return <Contacts />;\n};\n","import ContactPhoneIcon from '@mui/icons-material/ContactPhone';\n\nexport const HomePage = () => {\n  return (\n    <div>\n      <h2>\n        Welcome to our Phonebook!\n        <ContactPhoneIcon\n          sx={{ mr: 0.5, fontSize: 30, marginLeft: 3, color: '#DAC3B3' }}\n        />\n      </h2>\n    </div>\n  );\n};\n","import React from 'react';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/authOperations';\nimport { FormControl, FormLabel, TextField } from '@mui/material';\nimport Grid from '@mui/material/Grid';\nimport { Btn } from './LoginPage.styled';\nimport { ErrorMessage } from '@hookform/error-message';\nimport { Toaster } from 'react-hot-toast';\n\nconst schema = yup\n  .object({\n    email: yup\n      .string()\n      .email()\n      .typeError('Custom not a number message!')\n      .required(),\n    password: yup\n      .string()\n      .required('No password provided.')\n      .min(8, 'Password is too short - should be 8 chars minimum.')\n      .matches(/[a-zA-Z]/, 'Password can only contain Latin letters.'),\n  })\n  .required();\n\nexport const LoginPage = () => {\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    resetField,\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n  const onSubmit = ({ email, password }) => {\n    resetField('email');\n    resetField('password');\n    dispatch(logIn({ email, password }));\n  };\n\n  return (\n    <>\n      <Grid container alignItems=\"center\" justify=\"center\" direction=\"column\">\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <FormControl\n            sx={{\n              backgroundColor: '#ffffff',\n              padding: '25px',\n              border: '1px dashed black',\n              borderRadius: '8%',\n            }}\n          >\n            <FormLabel\n              sx={{ margin: '15px auto', fontWeight: '700', fontSize: '32px' }}\n            >\n              Log In\n            </FormLabel>\n            <Grid item>\n              <TextField\n                required\n                id=\"outlined-required\"\n                label=\"Email\"\n                InputLabelProps={{\n                  style: { color: '#6C5F5B', fontWeight: 700 },\n                }}\n                inputProps={{\n                  style: {\n                    width: '300px',\n                    backgroundColor: '#DAC3B3',\n                  },\n                }}\n                sx={{\n                  marginBottom: '20px',\n                }}\n                {...register('email', {\n                  pattern: {\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                    message: 'Invalid email address',\n                  },\n                })}\n              />\n            </Grid>\n            <ErrorMessage\n              errors={errors}\n              name=\"email\"\n              render={({ message }) => (\n                <p\n                  style={{\n                    marginTop: -15,\n                    color: 'red',\n                    fontSize: 12,\n                    width: 200,\n                  }}\n                >\n                  {message}\n                </p>\n              )}\n            />\n            <TextField\n              placeholder=\"Password\"\n              required\n              id=\"outlined-required\"\n              label=\"Password\"\n              type=\"password\"\n              autoComplete=\"off\"\n              InputLabelProps={{\n                style: { color: '#DAC3B3', fontWeight: 700 },\n              }}\n              inputProps={{\n                style: {\n                  width: '300px',\n                  backgroundColor: '#6C5F5B',\n                },\n              }}\n              sx={{\n                marginBottom: '20px',\n              }}\n              {...register('password', {\n                minLength: {\n                  value: 8,\n                  message: 'Min length is 8 characters',\n                },\n              })}\n            />\n            <ErrorMessage\n              errors={errors}\n              name=\"password\"\n              render={({ message }) => (\n                <p\n                  style={{\n                    marginTop: -15,\n                    color: 'red',\n                    fontSize: 12,\n                    width: 200,\n                  }}\n                >\n                  {message}\n                </p>\n              )}\n            />\n            <Btn\n              type=\"submit\"\n              InputLabelProps={{\n                style: { color: '#6C5F5B', fontWeight: 700 },\n              }}\n              sx={{\n                marginBottom: '20px',\n              }}\n            />\n            <Toaster />\n          </FormControl>\n        </form>\n      </Grid>\n    </>\n  );\n};\n","import { TextField } from '@mui/material';\nimport styled from 'styled-components';\n\nexport const Btn = styled(TextField)`\n  background-color: ${props => props.theme.colors.newspapper};\n\n  &:hover {\n    background-color: ${props => props.theme.colors.tin};\n  }\n`;\n","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { registration } from 'redux/auth/authOperations';\nimport { FormControl, FormLabel, TextField } from '@mui/material';\nimport Grid from '@mui/material/Grid';\nimport { Btn } from './RegisterPage.styled';\nimport { ErrorMessage } from '@hookform/error-message';\nimport { Toaster } from 'react-hot-toast';\n\nexport const RegisterPage = () => {\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    resetField,\n  } = useForm({});\n  const onSubmit = data => {\n    console.log(data);\n    resetField('name');\n    resetField('email');\n    resetField('password');\n    dispatch(registration(data));\n  };\n\n  return (\n    <>\n      <Grid container alignItems=\"center\" justify=\"center\" direction=\"column\">\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <FormControl\n            sx={{\n              backgroundColor: '#ffffff',\n              padding: '25px',\n              border: '1px dashed black',\n              borderRadius: '8%',\n            }}\n          >\n            <FormLabel\n              sx={{ margin: '15px auto', fontWeight: '700', fontSize: '32px' }}\n            >\n              Registration\n            </FormLabel>\n            <Grid item>\n              <TextField\n                required\n                id=\"outlined-required\"\n                label=\"Name\"\n                InputLabelProps={{\n                  style: { color: '#6C5F5B', fontWeight: 700 },\n                }}\n                inputProps={{\n                  style: {\n                    width: '300px',\n                    backgroundColor: '#DAC3B3',\n                  },\n                }}\n                sx={{\n                  marginBottom: '20px',\n                }}\n                {...register('name', {\n                  required: true,\n                  pattern: {\n                    value:\n                      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n                    message: 'The name must contain the characters only',\n                  },\n                })}\n              />\n            </Grid>\n            <ErrorMessage\n              errors={errors}\n              name=\"name\"\n              render={({ message }) => (\n                <p\n                  style={{\n                    marginTop: -15,\n                    color: 'red',\n                    fontSize: 12,\n                    width: 300,\n                  }}\n                >\n                  {message}\n                </p>\n              )}\n            />\n            <Grid item>\n              <TextField\n                required\n                id=\"outlined-required\"\n                label=\"Email\"\n                InputLabelProps={{\n                  style: { color: '#DAC3B3', fontWeight: 700 },\n                }}\n                inputProps={{\n                  style: {\n                    width: '300px',\n                    backgroundColor: '#6C5F5B',\n                  },\n                }}\n                sx={{\n                  marginBottom: '20px',\n                }}\n                {...register('email', {\n                  pattern: {\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                    message: 'Invalid email address',\n                  },\n                })}\n              />\n            </Grid>\n            <ErrorMessage\n              errors={errors}\n              name=\"email\"\n              render={({ message }) => (\n                <p\n                  style={{\n                    marginTop: -15,\n                    color: 'red',\n                    fontSize: 12,\n                    width: 200,\n                  }}\n                >\n                  {message}\n                </p>\n              )}\n            />\n            <TextField\n              placeholder=\"Password\"\n              required\n              id=\"outlined-required\"\n              label=\"Password\"\n              type=\"password\"\n              autoComplete=\"off\"\n              InputLabelProps={{\n                style: { color: '#6C5F5B', fontWeight: 700 },\n              }}\n              inputProps={{\n                style: {\n                  width: '300px',\n                  backgroundColor: '#DAC3B3',\n                },\n              }}\n              sx={{\n                marginBottom: '20px',\n              }}\n              {...register('password', {\n                minLength: {\n                  value: 8,\n                  message: 'Min length is 8 characters',\n                },\n              })}\n            />\n            <ErrorMessage\n              errors={errors}\n              name=\"password\"\n              render={({ message }) => (\n                <p\n                  style={{\n                    marginTop: -15,\n                    color: 'red',\n                    fontSize: 12,\n                    width: 200,\n                  }}\n                >\n                  {message}\n                </p>\n              )}\n            />\n            <Btn\n              type=\"submit\"\n              InputLabelProps={{\n                style: { color: '#6C5F5B', fontWeight: 700 },\n              }}\n              sx={{\n                marginBottom: '20px',\n              }}\n            />\n            <Toaster />\n          </FormControl>\n        </form>\n      </Grid>\n    </>\n  );\n};\n","import { TextField } from '@mui/material';\nimport styled from 'styled-components';\n\nexport const Btn = styled(TextField)`\n  background-color: ${props => props.theme.colors.metalic};\n\n  &:hover {\n    background-color: ${props => props.theme.colors.newspapper};\n  }\n`;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M22 3H2C.9 3 0 3.9 0 5v14c0 1.1.9 2 2 2h20c1.1 0 1.99-.9 1.99-2L24 5c0-1.1-.9-2-2-2zM8 6c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm6 12H2v-1c0-2 4-3.1 6-3.1s6 1.1 6 3.1v1zm3.85-4h1.64L21 16l-1.99 1.99c-1.31-.98-2.28-2.38-2.73-3.99-.18-.64-.28-1.31-.28-2s.1-1.36.28-2c.45-1.62 1.42-3.01 2.73-3.99L21 8l-1.51 2h-1.64c-.22.63-.35 1.3-.35 2s.13 1.37.35 2z\"\n}), 'ContactPhone');\n\nexports.default = _default;"],"names":["ContactsList","styled","props","theme","spacing","Button","colors","craftPapper","animation","newspapper","metalic","ContactList","contacts","useDeletePostMutation","deletePost","isDeleting","isLoading","map","name","id","number","type","onClick","disabled","PropTypes","isRequired","onDeleteClick","Input","Wrapper","Filter","useGetContactsQuery","data","filter","useSelector","getFilter","dispatch","useDispatch","length","value","onChange","evt","filterContact","currentTarget","deleteSearchingContact","Form","tin","Label","black","ContactForm","onSubmit","useState","setName","setNumber","handleInputChange","preventDefault","pattern","title","required","Container","Title","Contact","Contacts","error","useAddPostMutation","addContact","filteredContacts","normilizedFilter","toLowerCase","contact","includes","findContact","submitedName","submitedNumber","nanoid","newContact","searchedName","find","toast","style","border","padding","color","iconTheme","primary","secondary","ContactsPage","HomePage","sx","mr","fontSize","marginLeft","schema","yup","email","typeError","password","min","matches","LoginPage","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","resetField","container","alignItems","justify","direction","logIn","backgroundColor","borderRadius","margin","fontWeight","item","label","InputLabelProps","inputProps","width","marginBottom","message","render","marginTop","placeholder","autoComplete","minLength","Btn","TextField","RegisterPage","console","log","registration","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}